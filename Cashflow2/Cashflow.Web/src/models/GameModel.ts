/* tslint:disable */
/* eslint-disable */
/**
 * Cashflow.API | v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type {BoardSpaceModel} from './BoardSpaceModel';
import {BoardSpaceModelFromJSON, BoardSpaceModelToJSON,} from './BoardSpaceModel';
import type {PlayerModel} from './PlayerModel';
import {PlayerModelFromJSON, PlayerModelToJSON,} from './PlayerModel';

/**
 * 
 * @export
 * @interface GameModel
 */
export interface GameModel {
    /**
     * 
     * @type {string}
     * @memberof GameModel
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof GameModel
     */
    code?: string;
    /**
     * 
     * @type {Array<PlayerModel>}
     * @memberof GameModel
     */
    players?: Array<PlayerModel>;
    /**
     * 
     * @type {Array<BoardSpaceModel>}
     * @memberof GameModel
     */
    boardSpaces?: Array<BoardSpaceModel> | null;
}

/**
 * Check if a given object implements the GameModel interface.
 */
export function instanceOfGameModel(value: object): value is GameModel {
    return true;
}

export function GameModelFromJSON(json: any): GameModel {
    return GameModelFromJSONTyped(json, false);
}

export function GameModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): GameModel {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'code': json['code'] == null ? undefined : json['code'],
        'players': json['players'] == null ? undefined : ((json['players'] as Array<any>).map(PlayerModelFromJSON)),
        'boardSpaces': json['boardSpaces'] == null ? undefined : ((json['boardSpaces'] as Array<any>).map(BoardSpaceModelFromJSON)),
    };
}

export function GameModelToJSON(json: any): GameModel {
    return GameModelToJSONTyped(json, false);
}

export function GameModelToJSONTyped(value?: GameModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'code': value['code'],
        'players': value['players'] == null ? undefined : ((value['players'] as Array<any>).map(PlayerModelToJSON)),
        'boardSpaces': value['boardSpaces'] == null ? undefined : ((value['boardSpaces'] as Array<any>).map(BoardSpaceModelToJSON)),
    };
}

