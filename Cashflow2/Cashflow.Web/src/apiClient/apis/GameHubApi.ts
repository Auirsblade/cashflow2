/* tslint:disable */
/* eslint-disable */
/**
 * Cashflow API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  GameResponseModel,
  PlayerModel,
  ProfessionModel,
} from '../models/index';
import {
    GameResponseModelFromJSON,
    GameResponseModelToJSON,
    PlayerModelFromJSON,
    PlayerModelToJSON,
    ProfessionModelFromJSON,
    ProfessionModelToJSON,
} from '../models/index';

export interface HubsGameHubCreateGamePostRequest {
    playerName?: string;
}

export interface HubsGameHubJoinGamePostRequest {
    playerName?: string;
    gameCode?: string;
}

export interface HubsGameHubSelectProfessionPostRequest {
    gameCode?: string;
    player?: Omit<PlayerModel, 'income'|'taxes'|'childExpenses'|'expenses'|'netIncome'>;
    profession?: ProfessionModel;
}

/**
 * 
 */
export class GameHubApi extends runtime.BaseAPI {

    /**
     */
    async hubsGameHubCreateGamePostRaw(requestParameters: HubsGameHubCreateGamePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GameResponseModel>> {
        const queryParameters: any = {};

        if (requestParameters['playerName'] != null) {
            queryParameters['playerName'] = requestParameters['playerName'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/hubs/GameHub/CreateGame`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GameResponseModelFromJSON(jsonValue));
    }

    /**
     */
    async hubsGameHubCreateGamePost(requestParameters: HubsGameHubCreateGamePostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GameResponseModel> {
        const response = await this.hubsGameHubCreateGamePostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async hubsGameHubJoinGamePostRaw(requestParameters: HubsGameHubJoinGamePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GameResponseModel>> {
        const queryParameters: any = {};

        if (requestParameters['playerName'] != null) {
            queryParameters['playerName'] = requestParameters['playerName'];
        }

        if (requestParameters['gameCode'] != null) {
            queryParameters['gameCode'] = requestParameters['gameCode'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/hubs/GameHub/JoinGame`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GameResponseModelFromJSON(jsonValue));
    }

    /**
     */
    async hubsGameHubJoinGamePost(requestParameters: HubsGameHubJoinGamePostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GameResponseModel> {
        const response = await this.hubsGameHubJoinGamePostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async hubsGameHubSelectProfessionPostRaw(requestParameters: HubsGameHubSelectProfessionPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        if (requestParameters['gameCode'] != null) {
            queryParameters['gameCode'] = requestParameters['gameCode'];
        }

        if (requestParameters['player'] != null) {
            queryParameters['player'] = requestParameters['player'];
        }

        if (requestParameters['profession'] != null) {
            queryParameters['profession'] = requestParameters['profession'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/hubs/GameHub/SelectProfession`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async hubsGameHubSelectProfessionPost(requestParameters: HubsGameHubSelectProfessionPostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.hubsGameHubSelectProfessionPostRaw(requestParameters, initOverrides);
    }

}
