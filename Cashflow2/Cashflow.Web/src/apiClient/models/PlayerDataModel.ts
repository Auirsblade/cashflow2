/* tslint:disable */
/* eslint-disable */
/**
 * Cashflow API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { LineItemModel } from './LineItemModel';
import {
    LineItemModelFromJSON,
    LineItemModelFromJSONTyped,
    LineItemModelToJSON,
    LineItemModelToJSONTyped,
} from './LineItemModel';
import type { ProfessionModel } from './ProfessionModel';
import {
    ProfessionModelFromJSON,
    ProfessionModelFromJSONTyped,
    ProfessionModelToJSON,
    ProfessionModelToJSONTyped,
} from './ProfessionModel';

/**
 * 
 * @export
 * @interface PlayerDataModel
 */
export interface PlayerDataModel {
    /**
     * 
     * @type {string}
     * @memberof PlayerDataModel
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof PlayerDataModel
     */
    name?: string | null;
    /**
     * 
     * @type {number}
     * @memberof PlayerDataModel
     */
    boardSpaceId?: number;
    /**
     * 
     * @type {ProfessionModel}
     * @memberof PlayerDataModel
     */
    profession?: ProfessionModel;
    /**
     * 
     * @type {Array<LineItemModel>}
     * @memberof PlayerDataModel
     */
    lineItems?: Array<LineItemModel> | null;
    /**
     * 
     * @type {number}
     * @memberof PlayerDataModel
     */
    readonly income?: number;
    /**
     * 
     * @type {number}
     * @memberof PlayerDataModel
     */
    readonly expenses?: number;
    /**
     * 
     * @type {number}
     * @memberof PlayerDataModel
     */
    readonly netIncome?: number;
}

/**
 * Check if a given object implements the PlayerDataModel interface.
 */
export function instanceOfPlayerDataModel(value: object): value is PlayerDataModel {
    return true;
}

export function PlayerDataModelFromJSON(json: any): PlayerDataModel {
    return PlayerDataModelFromJSONTyped(json, false);
}

export function PlayerDataModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlayerDataModel {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'boardSpaceId': json['boardSpaceId'] == null ? undefined : json['boardSpaceId'],
        'profession': json['profession'] == null ? undefined : ProfessionModelFromJSON(json['profession']),
        'lineItems': json['lineItems'] == null ? undefined : ((json['lineItems'] as Array<any>).map(LineItemModelFromJSON)),
        'income': json['income'] == null ? undefined : json['income'],
        'expenses': json['expenses'] == null ? undefined : json['expenses'],
        'netIncome': json['netIncome'] == null ? undefined : json['netIncome'],
    };
}

export function PlayerDataModelToJSON(json: any): PlayerDataModel {
    return PlayerDataModelToJSONTyped(json, false);
}

export function PlayerDataModelToJSONTyped(value?: Omit<PlayerDataModel, 'income'|'expenses'|'netIncome'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'boardSpaceId': value['boardSpaceId'],
        'profession': ProfessionModelToJSON(value['profession']),
        'lineItems': value['lineItems'] == null ? undefined : ((value['lineItems'] as Array<any>).map(LineItemModelToJSON)),
    };
}

