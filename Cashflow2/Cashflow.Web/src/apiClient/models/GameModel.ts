/* tslint:disable */
/* eslint-disable */
/**
 * Cashflow API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { BoardSpaceModel } from './BoardSpaceModel';
import {
    BoardSpaceModelFromJSON,
    BoardSpaceModelFromJSONTyped,
    BoardSpaceModelToJSON,
    BoardSpaceModelToJSONTyped,
} from './BoardSpaceModel';
import type { ConfirmActionModel } from './ConfirmActionModel';
import {
    ConfirmActionModelFromJSON,
    ConfirmActionModelFromJSONTyped,
    ConfirmActionModelToJSON,
    ConfirmActionModelToJSONTyped,
} from './ConfirmActionModel';
import type { MarketActionModel } from './MarketActionModel';
import {
    MarketActionModelFromJSON,
    MarketActionModelFromJSONTyped,
    MarketActionModelToJSON,
    MarketActionModelToJSONTyped,
} from './MarketActionModel';
import type { CharityActionModel } from './CharityActionModel';
import {
    CharityActionModelFromJSON,
    CharityActionModelFromJSONTyped,
    CharityActionModelToJSON,
    CharityActionModelToJSONTyped,
} from './CharityActionModel';
import type { PlayerModel } from './PlayerModel';
import {
    PlayerModelFromJSON,
    PlayerModelFromJSONTyped,
    PlayerModelToJSON,
    PlayerModelToJSONTyped,
} from './PlayerModel';
import type { DealActionModel } from './DealActionModel';
import {
    DealActionModelFromJSON,
    DealActionModelFromJSONTyped,
    DealActionModelToJSON,
    DealActionModelToJSONTyped,
} from './DealActionModel';

/**
 * 
 * @export
 * @interface GameModel
 */
export interface GameModel {
    /**
     * 
     * @type {string}
     * @memberof GameModel
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof GameModel
     */
    code?: string | null;
    /**
     * 
     * @type {string}
     * @memberof GameModel
     */
    currentPlayerId?: string;
    /**
     * 
     * @type {Array<PlayerModel>}
     * @memberof GameModel
     */
    players?: Array<PlayerModel> | null;
    /**
     * 
     * @type {Array<BoardSpaceModel>}
     * @memberof GameModel
     */
    boardSpaces?: Array<BoardSpaceModel> | null;
    /**
     * 
     * @type {ConfirmActionModel}
     * @memberof GameModel
     */
    confirmAction?: ConfirmActionModel;
    /**
     * 
     * @type {DealActionModel}
     * @memberof GameModel
     */
    dealAction?: DealActionModel;
    /**
     * 
     * @type {MarketActionModel}
     * @memberof GameModel
     */
    marketAction?: MarketActionModel;
    /**
     * 
     * @type {CharityActionModel}
     * @memberof GameModel
     */
    charityAction?: CharityActionModel;
}

/**
 * Check if a given object implements the GameModel interface.
 */
export function instanceOfGameModel(value: object): value is GameModel {
    return true;
}

export function GameModelFromJSON(json: any): GameModel {
    return GameModelFromJSONTyped(json, false);
}

export function GameModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): GameModel {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'code': json['code'] == null ? undefined : json['code'],
        'currentPlayerId': json['currentPlayerId'] == null ? undefined : json['currentPlayerId'],
        'players': json['players'] == null ? undefined : ((json['players'] as Array<any>).map(PlayerModelFromJSON)),
        'boardSpaces': json['boardSpaces'] == null ? undefined : ((json['boardSpaces'] as Array<any>).map(BoardSpaceModelFromJSON)),
        'confirmAction': json['confirmAction'] == null ? undefined : ConfirmActionModelFromJSON(json['confirmAction']),
        'dealAction': json['dealAction'] == null ? undefined : DealActionModelFromJSON(json['dealAction']),
        'marketAction': json['marketAction'] == null ? undefined : MarketActionModelFromJSON(json['marketAction']),
        'charityAction': json['charityAction'] == null ? undefined : CharityActionModelFromJSON(json['charityAction']),
    };
}

export function GameModelToJSON(json: any): GameModel {
    return GameModelToJSONTyped(json, false);
}

export function GameModelToJSONTyped(value?: GameModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'code': value['code'],
        'currentPlayerId': value['currentPlayerId'],
        'players': value['players'] == null ? undefined : ((value['players'] as Array<any>).map(PlayerModelToJSON)),
        'boardSpaces': value['boardSpaces'] == null ? undefined : ((value['boardSpaces'] as Array<any>).map(BoardSpaceModelToJSON)),
        'confirmAction': ConfirmActionModelToJSON(value['confirmAction']),
        'dealAction': DealActionModelToJSON(value['dealAction']),
        'marketAction': MarketActionModelToJSON(value['marketAction']),
        'charityAction': CharityActionModelToJSON(value['charityAction']),
    };
}

